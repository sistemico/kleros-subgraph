#
# Kleros
#

type KlerosSummary @entity {
  " Kleros platform ID "
  id: ID!

  " Total numbers of courts "
  courtCount: BigInt!

  " Total numbers of disputes "
  disputeCount: BigInt!
}

type Court @entity {
  " Court index "
  id: ID!

  " Court name "
  name: String!

  " Parent court "
  parent: Court

  " Whether to use commit and reveal or not "
  hiddenVotes: Boolean!

  " Minimum tokens needed to stake in the court "
  minStake: BigDecimal!

  " Basis point of tokens that are lost when incoherent "
  alpha: BigInt!

  " Arbitration fee paid per juror "
  feeForJuror: BigDecimal!

  " The appeal after the one that reaches this number of jurors will go to the parent court if any, otherwise, no more appeals are possible "
  jurorsForCourtJump: BigDecimal!

  " Total numbers of disputes on this court "
  disputeCount: BigInt!

  " URI of the court policy "
  policy: String

  " List of child courts "
  children: [Court!] @derivedFrom(field: "parent")
}

type Dispute @entity {
  " Dispute ID "
  id: ID!

  " The subcourt the dispute is in "
  court: Court!

  " The number of choices jurors have when voting "
  numberOfChoices: BigInt!

  " Current period "
  period: Period!

  " Address of the dispute's owner "
  owner: Bytes!

  " Creation timestamp as seconds "
  created: BigInt!

  " Block number in which the dispute was created "
  createdAtBlock: BigInt!

  " Transaction hash in which the dispute was created "
  createdAtTransaction: Bytes!

  " Timestamp as seconds of most recent action "
  modified: BigInt!

  " Block number at most recent action"
  modifiedAtBlock: BigInt!

  " Transaction hash at most recent action "
  modifiedAtTransaction: Bytes!
}

" Dispute period "
enum Period {
  " Evidence can be submitted. This is also when drawing has to take place "
  EVIDENCE

  " Jurors commit a hashed vote. This is skipped for courts without hidden votes "
  COMMIT

  " Jurors reveal/cast their vote depending on whether the court has hidden votes or not "
  VOTE

  " The dispute can be appealed "
  APPEAL

  " Tokens are redistributed and the ruling is executed "
  EXECUTION
}

#
# Pinakion
#

type PinakionTransfer @entity {
  id: ID!

  " Quantity of tokens transferred "
  amount: BigDecimal!

  " Address of the source account "
  from: Bytes!

  " Address of the destination account "
  to: Bytes!

  " Block number "
  block: BigInt!

  " Event timestamp "
  timestamp: BigInt!

  " Transaction hash "
  transaction: Bytes!
}
